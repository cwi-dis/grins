# $Id$
#
# Attribute definitions
# ---------------------
#
# Each definition is a 7-tuple enclosed in parenthes:
# (attrname, typedef, defaultvalue, labeltext, displayername, helptext,
#  inheritance)
#
# Attributes with names starting with _ are for caching only, these
# are only written to the .cmc file, not to the .cmif file.
#
# The typedef is used to determine how to parse the default value,
# with the provision that tuples, lists and dictionaries must
# be surrounded by an extra pair of parentheses.
#
# The helptext should be one line explaining what the attribute is for.
#
# Inheritance can be one of four names: (raw, normal, inherited, channel).
# Values 'raw', 'normal' and 'inherited' mean that node.GetRawAttr(),
# node.GetAttr() or node.GetInherAttr(), respectively, should be used to
# get this type of attribute.  The value 'channel' is the same as
# 'inherited', but means that the default can also be gotten from
# the channel attributes.  (For the time being, inheritance is optional,
# defaulting to 'normal'.)
#
# A definition need not be wholly contained in a single input line;
# blank lines and comments may be inserted freely.

(abstract (string) '' 'Abstract' default 'A brief description of the contents (informational only)' raw (g2 qt smil10 smil2 cmif snap))

(alt (string) '' 'Alternate text' default
	'Alternate text for media object' raw (g2 qt smil10 smil2 cmif snap))

(anchorlist (list (enclosed (any)))
	() 'Anchors' hidden 'List of anchors on this node' raw (g2 qt smil10 smil2 cmif snap))

(author (string) '' 'Author' default 'Author (informational only)' raw (g2 qt smil10 smil2 cmif snap))

(base (string) '' 'Base URL' default
	'Base URL of document, used for resolving relative URLs' raw (g2 qt smil10 smil2 cmif snap))

(base_window (name) 'undefined' 'Channel base window' basechannelname
	'Name of window in which channelwin is created' raw (cmif))

(base_winoff (tuple (float) (float) (float) (float)) (0.0 0.0 1.0 1.0)
	'Position and size' default 'Position and size, usually in pixels' channel (g2 qt smil10 cmif))

(begin (float) 0.0 'Begin time' default
	'Start delay of node' normal (g2 qt smil10 smil2 cmif snap))

(bgcolor (tuple (int) (int) (int)) (255 255 255) 'Background color' color
	'Color used for background of window' region (g2 qt smil10 smil2 cmif snap))

(cssbgcolor (tuple (name) (tuple (int) (int) (int))) (transparent 0 0 0) 'Background color' csscolor
	'Color used for background of window' region (smil2 snap))

#(bgcolor (tuple (int) (int) (int)) (255 255 255) 'Background color' color
#	'Color used for background of window. Overriden by "transparent".' channel (g2 qt smil10 smil2 cmif))

(bitrate (int) 14400 'Peak bitrate' default
	'Peak bitrate reserved for this item, in bits per second' raw (g2 qt smil10 smil2 cmif snap))

(center (bool) 1 'Center image' default
	'Determines whether image is centered' channel (cmif))

(channel (name) undefined 'Channel' channelname
	'Name of channel used to render this node' inherited (g2 qt smil10 smil2 cmif))

(channellist (list (enclosed (tuple (name) (attrdict)))) ()
	'Channel List' hidden
	'Channels used in this document (root node only)' normal (cmif))

(clipbegin (string) '' 'Clip begin' default
	'Start of range of frames to be played. Simplest form is "npt=3s".' raw (g2_pro qt_pro smil10 smil2 cmif))

(clipend (string) '' 'Clip end' default
	'End of range of frames to be played. Simplest form is "npt=3s".' raw (g2_pro qt_pro smil10 smil2 cmif))

(comment (string) '' 'Comment' default
	 'A comment (authoring convenience only)' raw (cmif))

(copyright (string) '' 'Copyright' default 'Copyright of the item (informational only)' raw (g2 qt smil10 smil2 cmif snap))

(crop (tuple (float) (float) (float) (float)) (0 0 0 0) 'Image crop' default
    'Crop image.  Values are fractions to crop from top, bottom, left, right.'
	raw (cmif))

(cview_winpos  (tuple (float) (float)) (-1 -1) 'Time chart winpos' hidden
	 'Window position for Time chart view' raw (g2_pro qt_pro smil10 cmif))

(cview_winsize  (tuple (float) (float)) (115.234375 115.234375) 'Time chart winsize' hidden
	 'Window size for Time chart view' raw (g2_pro qt_pro smil10 cmif))

(tview_winpos  (tuple (float) (float)) (-1 -1) 'Time chart winpos' hidden
	 'Window position for Time chart view' raw (g2_pro qt_pro smil10 cmif))

(tview_winsize  (tuple (float) (float)) (115.234375 115.234375) 'Time chart winsize' hidden
	 'Window size for Time chart view' raw (g2_pro qt_pro smil10 cmif))

(duration (float) 0.0 'Duration' default
	'Duration of a node or subtree, 0 uses natural duration' normal (g2 qt smil10 smil2 cmif snap))

(editBackground (tuple (int) (int) (int)) (255 255 255) 'Edit background' color
	'Color used for background of window in Layout View' channel (g2 qt smil10 smil2 cmif snap))

(erase (enum never whenDone) whenDone 'Erase media' default
	'Whether to erase the media when done playing' raw (cmif smil2))

(fgcolor (tuple (int) (int) (int)) (0 0 0) 'Foreground color' color
	'Color used for text/images in window' channel (cmif snap))

(file (string) '' 'URL' file
	'URL for the data of this node' normal (g2 qt smil10 smil2 cmif snap))

# valid values: freeze, remove, hold, transition
# default depends on other attributes
(fill (enum default auto remove freeze transition hold) default 'Fill' fill
	'Whether data should be retained on screen after playing (default depends on type of node)' normal (smil2 cmif snap))

(fillDefault (enum inherit auto remove freeze transition hold) inherit 'Fill default' fill
	'Default value for the fill property on the children of this node (default depends on type of node)' inherited (smil2 cmif))

(font (string) 'Times-Roman' 'Font' font
	'Font used to display text' channel (cmif))

(hview_winpos (tuple (float) (float)) (-1 -1) 'Hierarchy winpos' hidden
	 'Window position for hierarchy view' raw (g2 qt smil10 smil2 cmif snap))

(hview_winsize (tuple (float) (float)) (115.234375 115.234375) 'Hierarchy winsize' hidden
	 'Window size for hierarchy view' raw (g2 qt smil10 smil2 cmif snap))

(hyperlinks (list (enclosed (tuple (enclosed (tuple (string) (any)))
                                   (enclosed (tuple (string) (any)))
				   (int) (int)))) ()
	'Hyperlink list' hidden
	'Hyperlinks within this document (root node only)' raw (g2 qt smil10 smil2 cmif snap))

(layout (name) undefined 'Screen' layoutname
	'Screen for this node and its descendants. Authoring convenience only, controls channels displayed in menus.' inherited (g2_pro qt_pro smil10 cmif snap))

(layouts (list (enclosed (tuple (name) (list (name))))) () 'List of screens'
	hidden 'List of layouts within this document (root node only)' raw (g2_pro qt_pro smil10 cmif))

(links_winpos  (tuple (float) (float)) (-1 -1) 'Link edit window position' hidden
	 'Position of link edit window' raw (g2 qt smil10 smil2 cmif snap))

(links_winsize  (tuple (float) (float)) (146.923828125 132.51953125) 'Link edit window size' hidden
	 'Size of link edit window' raw (g2 qt smil10 smil2 cmif snap))

(longdesc (string) '' 'Long description URL' default
	'Link (URL) to a long description of the media object' raw (g2 qt smil10 smil2 cmif snap))

(loop (float) 1 'Repeat count' default
	'Number of times the node should repeat' raw (g2 qt smil10 smil2 cmif))

(max (float) -1.0 'Maximum duration' default
	'Maximum duration of a node or subtree' normal (smil2 snap))

(mediaRepeat (enum strip preserve) preserve 'Media repeat' default
	'Whether to obey or ignore intrinsic repeat in media' raw (cmif smil2))

(mimetype (string) '' 'MIME type' default
	'MIME type of media object' raw (g2_pro qt_pro smil10 cmif))

(min (float) 0.0 'Minimum duration' default
	'Minimum duration of a node or subtree' normal (smil2 snap))

(name (name) '' 'Node name' default
	'Name for the node' raw (g2 qt smil10 smil2 cmif snap))

(noanchors (bool) 0 'Ignore anchors' default
	'Ignore anchors and other HTML tags' channel (cmif))

(nonlocal (bool) 0 'Remote only' default
	'Ignore incoming messages from local machine' raw (cmif))

(close (enum onRequest whenNotActive) onRequest 'Close viewport' default
	'When the viewport is to be closed' raw (cmif smil2 snap))

(open (enum onStart whenActive) onStart 'Open viewport' default
	'When the viewport is to be opened' raw (cmif smil2 snap))

(player_winpos (tuple (float) (float)) (-1 -1) 'Player winpos' hidden
	 'Window position for player control panel' raw (g2 qt smil10 smil2 cmif snap))

(player_winsize (tuple (float) (float)) (83.544921875 46.09375) 'Player winsize' hidden
	 'Window size for player control panel' raw (g2 qt smil10 smil2 cmif snap))

(pointsize (float) 0 'Point size' default
	'Point size of text displayed in window' channel (cmif))

(popup (bool) 1 'Popup on play' default
	'Determines whether channel pops up upon playing a node' raw (cmif))

(project_audiotype (int) 0 'Audio type' audiotype
	'Audio type, determines quality of audio when converting to RealAudio'
	raw (g2 snap))

(project_boston (bool) 0 'SMIL-Boston' default
	'Document conforms to SMIL-Boston' raw (smil2))

(project_default_region (name) undefined 'Default region' channelname
	'Default region for descendants of this node' inherited (cmif))

(project_default_type (name) undefined 'Default type' channeltype 
	'Default channel type for descendants of this node' inherited (cmif))

(project_bandwidth_fraction (float) -1.0 'Bandwidth fraction' default
	'Fraction of total bandwidth allocated to this sequence' raw (cmif))

(project_readonly (bool) 0 'This structure is readonly' default
	'This node is read-only' raw (cmif))

(project_convert (bool) 1 'Convert data' default
	'Convert data to RealMedia format' raw (g2_pro))

(project_ftp_host (string) '' 'Webserver' default
	'FTP hostname to use for webpage upload' raw (g2 qt snap))

(project_ftp_host_media (string) '' 'Mediaserver' default
	'FTP hostname to use for media file upload (default: same as webserver)' raw (g2 qt smil10 smil2 cmif snap))

(project_ftp_user (string) '' 'Webserver User' default
	'FTP username to use for webpage upload' raw (g2 qt snap))

(project_ftp_user_media (string) '' 'Mediaserver User' default
	'FTP username to use for media file upload' raw (g2 qt smil10 smil2 cmif snap))

(project_ftp_dir (string) '' 'Webserver Directory' default
	'Directory on FTP server where webpage will be stored' raw (g2 qt snap))

(project_ftp_dir_media (string) '' 'Mediaserver Directory' default
	'Directory on FTP server where media files will be stored' raw (g2 qt smil10 smil2 cmif snap))

(project_html_page (string) '' 'HTML template' default
	'Template used to generate web page for this presentation' raw (g2 qt snap))

(project_mobile (bool) 0 'Mobile play' default
	'Allow download' raw (g2_pro))

(project_perfect (bool) 1 'Perfect play' default
	'Buffered playback' raw (g2_pro))

(project_quality (int) 75 'Image quality' quality
	'Quality of image conversion to JPEG' raw (g2 snap))

(project_smil_url (string) '' 'Mediaserver URL' default
	'URL of SMIL document on the media server' raw (g2 qt snap))

(project_targets (int) 3 'Target audience' targets
	'One or more bandwidths for which this item should be converted' raw (g2 snap))

(project_videotype (int) 0 'Video type' videotype
	'Video type, determines quality of video when converting to RealVideo'
	raw (g2 snap))

(queuesize (float) 0 'Queue size' default
	'Audio playback queue size' channel (cmif))

(readIndex (int) 0 'Read index' default
	'Position in which descriptive text is read by assistive devices'
	raw (cmif smil2))

(regionName (name) 'undefined' 'Region name' default
	'Region nam' raw (cmif smil2 snap))

(repeatdur (float) 0 'Repeat duration' default
	'Time the node should repeat' raw (smil2))

(restart (enum default always whenNotActive never) default 'Restart node' restart
	'When can the node be restarted' raw (cmif smil2 snap))

(restartDefault (enum inherit always whenNotActive never) inherit 'Restart default' restart
	'Default value for the restart property on the children of this node' inherited (cmif smil2 snap))

(scale (float) 1.0 'Scale factor' scale
	'Aspect ratio is maintained for all options' channel (g2 qt smil10 smil2 cmif snap))

(scalefilter (name) '' 'Scaling filter' default
	'Name of filter used after image scaling' channel (cmif))

(showEditBackground (bool) 1 'Show edit background' default
	'Show edit background color in Layout View' channel (g2 qt smil10 smil2 cmif snap))

(style (list (name)) () 'Style(s)' default
	'List of style names that apply to this node/subtree' raw (cmif))

(style_winpos (tuple (float) (float)) (-1 -1) 'Style editor winpos' hidden
	 'Window position for style editor' raw (cmif))

(style_winsize (tuple (float) (float)) (86.42578125 92.1875) 'Style editor winsize' hidden
	 'Window size for style editor' raw (cmif))

(styledict (namedict (attrdict)) () 'Style Dictionary' hidden
	'Styles used in this document (root node only)' normal (cmif))

(syncBehavior (enum default canSlip locked independent) default 'Sync behavior' syncBehavior
	'Defines the runtime synchronization behavior for an element' normal (smil2 cmif))

(syncBehaviorDefault (enum inherit canSlip locked independent) inherit 'Sync behavior default' syncBehavior
	'Default value for the syncBehavior property on the children of this node' inherited (smil2 cmif))

# The items are (srcnode, event or marker, delay).
# things causing the node to start
(beginlist (list (enclosed (any))) ()
	'Begin events list' timelist
	'List of events starting this node' raw (smil2 snap))
# things causing the node to end
(endlist (list (enclosed (any))) ()
	'End events list' timelist
	'List of events ending this node' raw (smil2 snap))

(terminator (name) 'LAST' 'Endsync child' termnodename
	'Name of child that terminates parallel node' normal (g2 qt smil10 smil2 cmif))

(textalign (string) 'center' 'Alignment' default
	'Alignment of text in window' channel (cmif))

(title (string) '' 'Title' default
	 'The title of this object (informational only)' raw (g2 qt smil10 smil2 cmif snap))

(toplevel_winpos (tuple (float) (float)) (-1 -1) 'Top level winpos' hidden
	 'Window position for top level menu' raw (g2 qt smil10 smil2 cmif))

(toplevel_winsize (tuple (float) (float)) (31.689453125 72.021484375) 'Top level winsize' hidden
	 'Window size for top level menu' raw (g2 qt smil10 smil2 cmif))

# the next four attributes are only for prio nodes
(higher (enum stop pause) pause 'Higher' default
	'What to do when higher priority nodes interrupt our children' raw (smil2))
(lower (enum defer never) defer 'Lower' default
	'What to do when lower priority nodes interrupt our children' raw (smil2))
(peers (enum stop pause defer never) stop 'Peers' default
	'What to do when equal priority nodes interrupt our children' raw (smil2))
(pauseDisplay (enum inherit disable hide show) inherit 'Pause display' default
	'How paused children should behave (inherit means inherit from parent prio node)' raw (smil2))

# XXXX Transitions need a displayer
# XXXX This allows for a single transition only (should be a list)
(transIn (list (name)) () 'In-transition' transition
	'Names of transition at start of item' raw (smil2 snap))
	
(transOut (list (name)) () 'Out-transition' transition
	'Names of transition at end of item' raw (smil2 snap))
	
(transparent (int) 0 'Transparent' transparency
	'Determines transparency of window, overrides background color' region (g2_pro smil10 cmif))

(type (name) null 'Channel type' channeltype
	'Type of media this channel will be used for' raw (g2 qt smil10 smil2 cmif snap))

(u_group (list (name)) () 'Custom tests' usergroup
	'Custom tests that controls rendering of this node' inherited (smil2 cmif))

(unixprog (string) '' 'Unix program name' default
	'Application name (unix only)' channel (cmif))

(units (int) 2 'Units' units
	'What the size/position numbers are measured in' raw (g2_pro qt_pro smil10 cmif))

(usergroups (list (enclosed (tuple (name) (tuple (string) (bool) (name)))))
	() 'User groups' hidden
	'Usergroups used in this document (root node only)' normal (smil2 cmif))

(video (bool) 0 'Video output' default
	'Do image smoothing for video output' channel (cmif))

(visible (bool) 1 'Channel visibility' default
	'Are nodes played to the channel actually rendered?' raw (cmif))

(winpos (tuple (float) (float)) (-1 -1) 'Window position' hidden
	'Initial window position (x, y)' raw (g2 qt smil10 smil2 cmif))

(winsize (tuple (float) (float)) (0 0) 'Window size' default
	'Initial window size' raw (g2 qt smil10 cmif))

(z (int) 0 'Z order' default
	'Stacking order for channels, higher numbers are on top' normal (g2 qt smil10 smil2 cmif snap))

# SMIL system test attributes
(system_audiodesc (bool) 0 'System audio descriptions' bool3
	'Play node only if end-user wants audio descriptions' raw (smil2))
(system_bitrate (int) 0 'System bitrate' bitrate3
	'Play node only if bitrate >= value here' raw (g2 qt smil10 smil2 cmif snap))
(system_captions (bool) 0 'System captions' bool3
	'Play node only if end-user wants captions' raw (g2 qt smil10 smil2 cmif))
(system_language (string) '' 'System language' language3
	'Play node only if end-user prefers this language' raw (g2 qt smil10 smil2 cmif snap))
(system_overdub_or_caption (string) '' 'System overdub or caption' captionoverdub3
	'Play node only depending on end user overdub/caption preference' raw (g2 qt smil10 smil2 cmif))
(system_required (list (string)) () 'System required' reqlist
	'Play node only if player supports these features' raw (g2 qt smil10 smil2 cmif))
(system_screen_size (tuple (int) (int)) (0 0) 'System screen size' default
	'Play node only if screen bigger than this' raw (g2 qt smil10 smil2 cmif))
(system_screen_depth (int) 0 'System screen depth' default
	'Play node only if screen has more bits-per-pixel than this' raw (g2 qt smil10 smil2 cmif))
(system_operating_system (string) '' 'System operating system' opsys
	'Play node only if running on the specified operating system' raw (smil2))
(system_cpu (string) '' 'System CPU' cpu
	'Play node only if running on the specified CPU' raw (smil2))

# RealPix attributes
(aspect (bool) 1 'Keep aspect ratio' default
	'Keep aspect ratio of image' inherited (g2))

(color (tuple (int) (int) (int)) (0 0 0) 'Effect color' color
       'Color for transition effect' normal (g2))

(direction (enum left right up down) left 'Wipe Direction' direction
	'Direction of wipe' normal (g2))

(href (string) '' 'Hyperlink destination' default
	'The destination URL of Web page from the image' inherited (g2))

(imgcropwh (tuple (int) (int)) (0 0) 'Image crop size' default
	'Crop image.  Values are width and height of image area to display' normal (g2))

(imgcropxy (tuple (int) (int)) (0 0) 'Image crop coordinates' default
	'Crop image.  Values are x,y coordinates of image area to display' normal (g2))

(imgcropanchor (string) 'top-left' 'Image crop anchor' subregionanchor
	'Anchor for image crop (x,y) coordinates' normal (g2_pro))

(fullimage (bool) 1 'Use whole image' default
	'Use whole image' normal (g2))

(maxfps (int) 0 'Max fps' default 'Transition framerate, 0 for as high as possible' inherited (g2_pro))

(preroll (float) 0.0 'Preroll time' default
	'Time for which data should be buffered before presentation starts, see RealPix documentation'
	raw (g2))

(size (tuple (int) (int)) (256 256) 'Image size' default
	'Size of slideshow, in pixels' normal (g2))

(start (float) 0.0 'Begin time' default
	'Start time of transition effect, relative to previous transition start' normal (g2))

(subregionxy (tuple (int) (int)) (0 0) 'Destination region (x,y)' normal
	'(x,y) coordinates of destination area within channel' normal (g2))

(subregionwh (tuple (int) (int)) (0 0) 'Destination region (w,h)' normal
	'width and height of destination area within channel' normal (g2))

(subregionanchor (string) 'top-left' 'Destination region anchor' subregionanchor
	'Anchor for subregion (x,y) coordinates' normal (g2_pro))

(displayfull (bool) 1 'Fill whole region' default
	'Use whole region for transition effect' normal (g2))

(tag (enum fill fadein fadeout crossfade wipe viewchange) fill 'Transition type' default
	'Type of transition effect' normal (g2))
	
(caption (string) '' 'Text caption' default
	'Text caption to show with the image' normal (g2))
	
(captionchannel (name) '' 'Caption channel' captionchannelname
	'Name of channel used to render captions on this node' inherited (g2))

(wipetype (enum normal push) normal 'Wipe type' wipetype
	'Type of wipe' normal (g2))

(fadeout (bool) 0 'Fadeout' default
	'Fadeout image after specified time' normal (g2))

(fadeouttime (float) 0.0 'Fadeout begin time' default
	'Start time for fadeout, relative to transition completion' normal (g2))

(fadeoutcolor (tuple (int) (int) (int)) (0 0 0) 'Fadeout color' color
	'Color to fadeout to' normal (g2))

(fadeoutduration (float) 0.0 'Fadeout duration' default
	'Duration of fadeout transition' normal (g2))

(tduration (float) 0.0 'Transition duration' default
	'Duration of the transition' normal (g2))

# QuickTime attributes

(autoplay (bool) 0 'Auto play' default 
	'Presentation automatically starts playback upon instantiation' normal (qt_pro))

(qtnext (string) '' 'Next presentation' file 
	'Presentation played after the current presentation is finished' normal (qt_pro))

(qttimeslider (bool) 0 'Time slider' default 
	'A time line is displayed as part of the user interface' normal (qt_pro))

(qtchaptermode (int) 0 'Chapter mode' qtchaptermode 
	'The way in which chapters is used in the user interface' normal (qt_pro))

(immediateinstantiation (bool) 0 'Immediate instantiation' default 
	'The media objects are instantiated immediately' normal (qt_pro))

(immediateinstantiationmedia (bool) 0 'Immediate instantiation' bool3 
	'The media object is instantiated immediately' normal (qt_pro))

(bitratenecessary (int) 14400 'Bitrate' bitrate3
	'The bitrate at which the media object would need to be transmitted in order to play back in real time' normal (qt_pro))

(systemmimetypesupported (string) '' 'System mime type supported' default
	'Specify the mime type that needs to be supported in order to be able to play back this particular media-object' normal (qt_pro))

(attachtimebase (bool) 1 'Attach time base' default
	'Slave the timebase of this media to the parent' normal (qt_pro))

(qtchapter (string) '' 'Chapter' default
	'Specify a chapter name' normal (qt_pro))

(anchortarget (string) '' 'Target' default
	'Specify where the presentation specified by the href attribute in the anchor tag will play' normal (qt_pro))

(qtcompositemode (string) '' 'Composite mode' default
	'Specifies how to composite a visual media element with other visual media elements behind it' normal (qt_pro))


# animation module

(atag (enum animate set animateMotion animateColor region transition area) animate 'Animation type' default
	'Animation type' normal (smil2 cmif))

(targetElement (string) '' 'Target element' default
	'Animation target element' normal (g2 qt smil10 smil2 cmif))

(attributeName (string) '' 'Attribute name' default
	'Animation target attribute name' normal (g2 qt smil10 smil2 cmif))

(attributeType (enum CSS XML auto) XML 'Attribute type' default
	'Target attribute namespace' normal (g2 qt smil10 smil2 cmif))

(additive (enum replace sum) replace 'Additive' default
	'Add animation effect' normal (g2 qt smil10 smil2 cmif))

(accumulate (enum none sum) none 'Accumulate' default
	'Accumulate animation effect' normal (g2 qt smil10 smil2 cmif))

(calcMode (enum discrete linear paced spline) linear 'Calculation mode' default
	'Interpolation mode for the animation' normal (g2 qt smil10 smil2 cmif))

(values (string) '' 'Values' default
	'Interpolation values' normal (g2 qt smil10 smil2 cmif))

(keyTimes (string) '' 'Key times' default
	'Interpolation control times' normal (g2 qt smil10 smil2 cmif))

(keySplines (string) '' 'Key splines' default
	'Interpolation bezier control points associated with the key times' normal (g2 qt smil10 smil2 cmif))

(from (string) '' 'From value' default
	'Starting attribute value' normal (g2 qt smil10 smil2 cmif))

(to (string) '' 'To value' default
	'Ending attribute value' normal (g2 qt smil10 smil2 cmif))

(by (string) '' 'By value' default
	'Ending relative offset attribute value' normal (g2 qt smil10 smil2 cmif))

(path (string) '' 'Path' default
	'Motion path' normal (g2 qt smil10 smil2 cmif))

(origin (string) '' 'Origin' default
	'Coordinates origin' normal (g2 qt smil10 smil2 cmif))


# time manipulations

(speed (float) 1.0 'Speed' default
	'Playback speed of element time' normal (g2 qt smil10 smil2 cmif))

(accelerate (float) 0.0 'Accelerate' default
	'Proportion of the simple duration to accelerate' normal (g2 qt smil10 smil2 cmif))

(decelerate (float) 0.0 'Decelerate' default
	'Proportion of the simple duration to decelerate' normal (g2 qt smil10 smil2 cmif))

(autoReverse (bool) 0 'Auto reverse' default
	'Play forwards then backwards' normal (g2 qt smil10 smil2 cmif))

# Transitions
(trname (name) '' 'Name' default
	'ID of transition, as used when referring to it' raw (smil2))
	
(trtype (enum barWipe boxWipe fourBoxWipe barnDoorWipe diagonalWipe bowTieWipe
		miscDiagonalWipe veeWipe barnVeeWipe zigZagWipe barnZigZagWipe irisWipe
		triangleWipe arrowHeadWipe pentagonWipe hexagonWipe ellipseWipe eyeWipe
		roundRectWipe starWipe clockWipe miscShapeWipe pinWheelWipe singleSweepWipe fanWipe
		doubleFanWipe doubleSweepWipe saloonDoorWipe windShieldWipe snakeWipe
		spiralWipe parallelSnakesWipe boxSnakesWipe waterfallWipe pushWipe slideWipe fade
	) fade 'Transition type' default
	'The type of transition to perform' raw (smil2))
	
(chsubtype (string) '' 'Region type' default
	'Type of region' raw (cmif smil2))

(subtype (name) '' 'Transition subtype' default
	'Further refinement of transition to perform' raw (smil2))
	
(dur (float) 1.0 'Duration' default
	'Duration of the transition' raw (smil2))

(startProgress (float) 0.0 'Start value' default
	'Percentage at which the transition starts XXXX better wording?' raw (smil2))
	
(endProgress (float) 1.0 'End value' default
	'Percentage at which the transition ends XXXX better wording?' raw (smil2))
	
(direction (enum forward reverse) forward 'Transition direction' default
	'Spatial direction of the transition effect, if applicable' raw (smil2))
	
(fadeColor (tuple (int) (int) (int)) (0 0 0) 'Effect color' color
       'Color for transition effect' normal (smil2))

(horzRepeat (int) 1 'Horizontal repeat' default
	'How often the transition pattern is repeated horizontally, if applicable' raw (smil2))

(vertRepeat (int) 1 'Vertical repeat' default
	'How often the transition pattern is repeated vertically, if applicable' raw (smil2))

(borderColor (tuple (int) (int) (int)) (0 0 0) 'Border color' color
       'Color for transition border (wipe only)' normal (smil2))

(borderWidth (int) 0 'Border width' default
	'Width of the border, applicable to wipe only' raw (smil2))
	
(coordinated (bool) 0 'Multi-element transition' default
	'Whether this is a coordinated transition across multiple elements' raw (smil2))
	
(clipBoundary (enum children parent) children 'Clip to children' default
	'Is transition limited to children only or parent plus children?' raw (smil2))

# registration points

(regAlign (enum topLeft topMid topRight midLeft center midRight bottomLeft bottomMid bottomRight) topLeft 'Alignment' default
	'Alignment point associate to the media' raw (smil2))

(regPoint (string) 'topLeft' 'Registration point' default
	'Registration point associate to the channel' channel (smil2))

# prefetch

(mediaSize (string) '100%' 'Media size' default
	'How much to fetch as a function of the file size of the resource' raw (smil2))
	
(mediaTime (string) '100%' 'Media time' default
	'How much to fetch as a function of the duration of the resource' raw (smil2))

(bandwidth (string) '100%' 'Bandwidth' default
	'How much bandwidth should use when doing the prefetch' raw (smil2))


# region

(showBackground (enum always whenActive) always 'Show background' default
	'show when node is active the background color or always' raw (smil2))
