
import java.awt.*;
import java.awt.event.*;
import java.applet.*;


public class GRiNSApplet extends Applet
{
    private Frame frame = new Frame();
	public void init()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setSize(480,413);
		add(grinsViewport);
		grinsViewport.setBackground(java.awt.Color.pink);
		grinsViewport.setBounds(25,25,300,300);
		buttonOpen.setLabel("Open");
		add(buttonOpen);
		buttonOpen.setBackground(java.awt.Color.lightGray);
		buttonOpen.setBounds(360,348,104,28);
		labelOpen.setText("Open:");
		add(labelOpen);
		labelOpen.setBounds(12,352,40,24);
		textFieldURL.setText("D:\\ufs\\Demo1\\Kerst\\NieuwJaar2.grins");
		add(textFieldURL);
		textFieldURL.setBounds(57,348,268,28);
		buttonPlay.setLabel("Play");
		add(buttonPlay);
		buttonPlay.setBackground(java.awt.Color.lightGray);
		buttonPlay.setBounds(360,25,104,28);
		buttonPause.setLabel("Pause");
		add(buttonPause);
		buttonPause.setBackground(java.awt.Color.lightGray);
		buttonPause.setBounds(360,76,104,28);
		buttonStop.setLabel("Stop");
		add(buttonStop);
		buttonStop.setBackground(java.awt.Color.lightGray);
		buttonStop.setBounds(360,128,104,28);
		buttonClose.setLabel("Close");
		add(buttonClose);
		buttonClose.setBackground(java.awt.Color.lightGray);
		buttonClose.setBounds(360,304,104,28);
		buttonGetSize.setLabel("Get viewport size");
		add(buttonGetSize);
		buttonGetSize.setBackground(java.awt.Color.lightGray);
		buttonGetSize.setBounds(360,188,104,28);
		textFieldSize.setEditable(false);
		add(textFieldSize);
		textFieldSize.setBounds(360,216,104,28);
		buttonBrowse.setLabel("...");
		add(buttonBrowse);
		buttonBrowse.setBackground(java.awt.Color.lightGray);
		buttonBrowse.setBounds(324,348,32,28);
		//}}
	
		//{{REGISTER_LISTENERS
		SymAction lSymAction = new SymAction();
		buttonOpen.addActionListener(lSymAction);
		buttonPlay.addActionListener(lSymAction);
		buttonPause.addActionListener(lSymAction);
		buttonStop.addActionListener(lSymAction);
		buttonClose.addActionListener(lSymAction);
		buttonGetSize.addActionListener(lSymAction);
		buttonBrowse.addActionListener(lSymAction);
		//}}
	}
	//GRiNSViewport grinsViewport = new GRiNSViewport();
	//java.awt.Canvas grinsViewport = new java.awt.Canvas();
	
	//{{DECLARE_CONTROLS
	GRiNSViewport grinsViewport = new GRiNSViewport();
	java.awt.Button buttonOpen = new java.awt.Button();
	java.awt.Label labelOpen = new java.awt.Label();
	java.awt.TextField textFieldURL = new java.awt.TextField();
	java.awt.Button buttonPlay = new java.awt.Button();
	java.awt.Button buttonPause = new java.awt.Button();
	java.awt.Button buttonStop = new java.awt.Button();
	java.awt.Button buttonClose = new java.awt.Button();
	java.awt.Button buttonGetSize = new java.awt.Button();
	java.awt.TextField textFieldSize = new java.awt.TextField();
	java.awt.Button buttonBrowse = new java.awt.Button();
	//}}
	
	private void message(String str) {
	    System.out.println(str+"\n");
	}
	
	public void start() {
	    }
	public void stop() {
	    grinsViewport.gpDisconnect();
	    }
    public void destroy() {
        }
	  
	// standalone execution support
    public static void main(String args[]) 
		{
	    class SFrame extends Frame {
	        SFrame(String title){
	            super(title);
	            }
	        void setApplet(Applet p){
	            applet = p;
	            }
	        private Applet applet;
	        }
		SFrame f = new SFrame("GRiNS Player");
		f.addWindowListener(
			new WindowAdapter() { 
				public void windowClosing(WindowEvent e) {
				    ((SFrame)e.getWindow()).applet.stop();
			        System.exit(0);
			        }
				});
	
		GRiNSApplet	grinsApplet = new GRiNSApplet();
        f.setApplet(grinsApplet);
		grinsApplet.init();
		grinsApplet.start();
		f.add("Center", grinsApplet);
		f.setSize(500,420);
		f.show();
		}
	

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == buttonOpen)
				buttonOpen_ActionPerformed(event);
			else if (object == buttonPlay)
				buttonPlay_ActionPerformed(event);
			else if (object == buttonPause)
				buttonPause_ActionPerformed(event);
			else if (object == buttonStop)
				buttonStop_ActionPerformed(event);
			else if (object == buttonClose)
				buttonClose_ActionPerformed(event);
			else if (object == buttonGetSize)
				buttonGetSize_ActionPerformed(event);
			else if (object == buttonBrowse)
				buttonBrowse_ActionPerformed(event);
		}
	}

	void buttonOpen_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		grinsViewport.gpOpen(textFieldURL.getText());
		
	}

	void buttonPlay_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		grinsViewport.gpPlay();	 
			 
	}

	void buttonPause_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		grinsViewport.gpPause();	 
			 
	}

	void buttonStop_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		grinsViewport.gpStop();	 
			 
	}

	void buttonClose_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		grinsViewport.gpClose();	 
			 
	}

	void buttonGetSize_ActionPerformed(java.awt.event.ActionEvent event)
	{
		Dimension d  = grinsViewport.gpGetSizeAdvice();	
		if(d!=null)
		    textFieldSize.setText("" + d.width + " " + d.height);
		else
		    textFieldSize.setText("");
			 
	}

	void buttonBrowse_ActionPerformed(java.awt.event.ActionEvent event)
	{
		FileDialog dlg = new FileDialog(frame, "Select presentation", FileDialog.LOAD);
		dlg.show();
		String filename = dlg.getFile();
		if(filename!=null){
		    String dir  = dlg.getDirectory();
		    String absFilename = dir+filename;
		    textFieldURL.setText(absFilename);
		}
	}
}
