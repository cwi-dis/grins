// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "domnamednodemap.h"

// Dispatch interfaces referenced by this interface
#include "domnode.h"


/////////////////////////////////////////////////////////////////////////////
// CDOMNamedNodeMap properties

/////////////////////////////////////////////////////////////////////////////
// CDOMNamedNodeMap operations

CDOMNode CDOMNamedNodeMap::getNamedItem(LPCTSTR name)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1a4, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		name);
	return CDOMNode(pDispatch);
}

CDOMNode CDOMNamedNodeMap::setNamedItem(LPDISPATCH newItem)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x1a5, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		newItem);
	return CDOMNode(pDispatch);
}

CDOMNode CDOMNamedNodeMap::removeNamedItem(LPCTSTR name)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1a6, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		name);
	return CDOMNode(pDispatch);
}

CDOMNode CDOMNamedNodeMap::GetItem(long index)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x0, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		index);
	return CDOMNode(pDispatch);
}

long CDOMNamedNodeMap::GetLength()
{
	long result;
	InvokeHelper(0x183, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
