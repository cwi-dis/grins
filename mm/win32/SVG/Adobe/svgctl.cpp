// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "svgctl.h"

// Dispatch interfaces referenced by this interface
#include "svgdocument.h"

/////////////////////////////////////////////////////////////////////////////
// CSVGCtl

IMPLEMENT_DYNCREATE(CSVGCtl, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CSVGCtl properties

/////////////////////////////////////////////////////////////////////////////
// CSVGCtl operations

CString CSVGCtl::GetSrc()
{
	CString result;
	InvokeHelper(0x1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGCtl::SetSrc(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CSVGCtl::getSrc()
{
	CString result;
	InvokeHelper(0x60020002, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGCtl::setSrc(LPCTSTR newVal)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x60020003, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 newVal);
}

long CSVGCtl::GetReadyState()
{
	long result;
	InvokeHelper(DISPID_READYSTATE, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CSVGCtl::reload()
{
	InvokeHelper(0x65, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CString CSVGCtl::GetDefaultFontFamily()
{
	CString result;
	InvokeHelper(0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGCtl::SetDefaultFontFamily(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CSVGCtl::getDefaultFontFamily()
{
	CString result;
	InvokeHelper(0x60020008, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGCtl::setDefaultFontFamily(LPCTSTR newVal)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x60020009, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 newVal);
}

float CSVGCtl::GetDefaultFontSize()
{
	float result;
	InvokeHelper(0x3, DISPATCH_PROPERTYGET, VT_R4, (void*)&result, NULL);
	return result;
}

void CSVGCtl::SetDefaultFontSize(float newValue)
{
	static BYTE parms[] =
		VTS_R4;
	InvokeHelper(0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

float CSVGCtl::getDefaultFontSize()
{
	float result;
	InvokeHelper(0x6002000c, DISPATCH_METHOD, VT_R4, (void*)&result, NULL);
	return result;
}

void CSVGCtl::setDefaultFontSize(float newVal)
{
	static BYTE parms[] =
		VTS_R4;
	InvokeHelper(0x6002000d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 newVal);
}

long CSVGCtl::GetDefaultAntialias()
{
	long result;
	InvokeHelper(0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CSVGCtl::SetDefaultAntialias(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CSVGCtl::getDefaultAntialias()
{
	long result;
	InvokeHelper(0x60020010, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CSVGCtl::setDefaultAntialias(long newVal)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x60020011, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 newVal);
}

CString CSVGCtl::GetFullscreen()
{
	CString result;
	InvokeHelper(0x12, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGCtl::SetFullscreen(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CSVGCtl::GetUse_svgz()
{
	CString result;
	InvokeHelper(0x13, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGCtl::SetUse_svgz(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CSVGDocument CSVGCtl::getSVGDocument()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x6b, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CSVGDocument(pDispatch);
}

CString CSVGCtl::getSVGViewerVersion()
{
	CString result;
	InvokeHelper(0x6a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}
