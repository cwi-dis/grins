// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "svgdocument.h"

// Dispatch interfaces referenced by this interface
#include "DOMNode.h"
#include "domnodelist.h"
#include "DOMNamedNodeMap.h"
#include "DOMDocument.h"
#include "DOMDocumentType.h"
#include "DOMImplementation.h"
#include "DOMElement.h"
#include "DOMDocumentFragment.h"
#include "domtext.h"
#include "domcomment.h"
#include "DOMCDATASection.h"
#include "DOMProcessingInstruction.h"
#include "DOMAttribute.h"
#include "DOMEntityReference.h"


/////////////////////////////////////////////////////////////////////////////
// CSVGDocument properties

/////////////////////////////////////////////////////////////////////////////
// CSVGDocument operations

CString CSVGDocument::GetNodeName()
{
	CString result;
	InvokeHelper(0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

VARIANT CSVGDocument::GetNodeValue()
{
	VARIANT result;
	InvokeHelper(0x3, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&result, NULL);
	return result;
}

void CSVGDocument::SetNodeValue(const VARIANT& newValue)
{
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 &newValue);
}

long CSVGDocument::GetNodeType()
{
	long result;
	InvokeHelper(0x4, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

CDOMNode CSVGDocument::GetParentNode()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNodeList CSVGDocument::GetChildNodes()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNodeList(pDispatch);
}

CDOMNode CSVGDocument::GetFirstChild()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNode CSVGDocument::GetLastChild()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNode CSVGDocument::GetPreviousSibling()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNode CSVGDocument::GetNextSibling()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNamedNodeMap CSVGDocument::GetAttributes()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNamedNodeMap(pDispatch);
}

CDOMNode CSVGDocument::insertBefore(LPDISPATCH newChild, const VARIANT& refChild)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_DISPATCH VTS_VARIANT;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		newChild, &refChild);
	return CDOMNode(pDispatch);
}

CDOMNode CSVGDocument::replaceChild(LPDISPATCH newChild, LPDISPATCH oldChild)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_DISPATCH VTS_DISPATCH;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		newChild, oldChild);
	return CDOMNode(pDispatch);
}

CDOMNode CSVGDocument::removeChild(LPDISPATCH childNode)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		childNode);
	return CDOMNode(pDispatch);
}

CDOMNode CSVGDocument::appendChild(LPDISPATCH newChild)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		newChild);
	return CDOMNode(pDispatch);
}

BOOL CSVGDocument::hasChildNodes()
{
	BOOL result;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

CDOMDocument CSVGDocument::GetOwnerDocument()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMDocument(pDispatch);
}

CDOMNode CSVGDocument::cloneNode(BOOL deep)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		deep);
	return CDOMNode(pDispatch);
}

CDOMDocumentType CSVGDocument::GetDoctype()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x42, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMDocumentType(pDispatch);
}

CDOMImplementation CSVGDocument::GetImplementation()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x43, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMImplementation(pDispatch);
}

CDOMElement CSVGDocument::GetDocumentElement()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x44, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMElement(pDispatch);
}

void CSVGDocument::SetRefDocumentElement(LPDISPATCH newValue)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x44, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, parms,
		 newValue);
}

CDOMElement CSVGDocument::createElement(LPCTSTR tagName)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x45, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		tagName);
	return CDOMElement(pDispatch);
}

CDOMDocumentFragment CSVGDocument::createDocumentFragment()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x46, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMDocumentFragment(pDispatch);
}

CDOMText CSVGDocument::createTextNode(LPCTSTR data)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x47, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		data);
	return CDOMText(pDispatch);
}

CDOMComment CSVGDocument::createComment(LPCTSTR data)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x48, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		data);
	return CDOMComment(pDispatch);
}

CDOMCDATASection CSVGDocument::createCDATASection(LPCTSTR data)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x49, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		data);
	return CDOMCDATASection(pDispatch);
}

CDOMProcessingInstruction CSVGDocument::createProcessingInstruction(LPCTSTR target, LPCTSTR data)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x4a, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		target, data);
	return CDOMProcessingInstruction(pDispatch);
}

CDOMAttribute CSVGDocument::createAttribute(LPCTSTR name)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x4b, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		name);
	return CDOMAttribute(pDispatch);
}

CDOMEntityReference CSVGDocument::createEntityReference(LPCTSTR name)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x4d, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		name);
	return CDOMEntityReference(pDispatch);
}

CDOMNodeList CSVGDocument::getElementsByTagName(LPCTSTR tagName)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x4e, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		tagName);
	return CDOMNodeList(pDispatch);
}

CString CSVGDocument::getNodeName()
{
	CString result;
	InvokeHelper(0x60040000, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

VARIANT CSVGDocument::getNodeValue()
{
	VARIANT result;
	InvokeHelper(0x60040001, DISPATCH_METHOD, VT_VARIANT, (void*)&result, NULL);
	return result;
}

void CSVGDocument::setNodeValue(const VARIANT& value)
{
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x60040002, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &value);
}

long CSVGDocument::getNodeType()
{
	long result;
	InvokeHelper(0x60040003, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CDOMNode CSVGDocument::getParentNode()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60040004, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNodeList CSVGDocument::getChildNodes()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60040005, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNodeList(pDispatch);
}

CDOMNode CSVGDocument::getFirstChild()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60040006, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNode CSVGDocument::getLastChild()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60040007, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNode CSVGDocument::getPreviousSibling()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60040008, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNode CSVGDocument::getNextSibling()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60040009, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNode(pDispatch);
}

CDOMNamedNodeMap CSVGDocument::getAttributes()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x6004000a, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMNamedNodeMap(pDispatch);
}

CDOMDocument CSVGDocument::getOwnerDocument()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x6004000b, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMDocument(pDispatch);
}

void CSVGDocument::normalize()
{
	InvokeHelper(0x6004000c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CSVGDocument::supports(LPCTSTR featureStr, LPCTSTR versionStr)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x6004000d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		featureStr, versionStr);
	return result;
}

CString CSVGDocument::GetNamespaceURI()
{
	CString result;
	InvokeHelper(0x6004000e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CSVGDocument::getNamespaceURI()
{
	CString result;
	InvokeHelper(0x6004000f, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CSVGDocument::GetPrefix()
{
	CString result;
	InvokeHelper(0x60040010, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGDocument::SetPrefix(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x60040010, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CSVGDocument::getPrefix()
{
	CString result;
	InvokeHelper(0x60040012, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGDocument::setPrefix(LPCTSTR prefix)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x60040013, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 prefix);
}

CString CSVGDocument::GetLocalName()
{
	CString result;
	InvokeHelper(0x60040014, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CSVGDocument::getLocalName()
{
	CString result;
	InvokeHelper(0x60040015, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetElement_node()
{
	short result;
	InvokeHelper(0x60040016, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetAttribute_node()
{
	short result;
	InvokeHelper(0x60040017, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetText_node()
{
	short result;
	InvokeHelper(0x60040018, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetCdata_section_node()
{
	short result;
	InvokeHelper(0x60040019, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetEntity_reference_node()
{
	short result;
	InvokeHelper(0x6004001a, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetEntity_node()
{
	short result;
	InvokeHelper(0x6004001b, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetProcessing_instruction_node()
{
	short result;
	InvokeHelper(0x6004001c, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetComment_node()
{
	short result;
	InvokeHelper(0x6004001d, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetDocument_node()
{
	short result;
	InvokeHelper(0x6004001e, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetDocument_type_node()
{
	short result;
	InvokeHelper(0x6004001f, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetDocument_fragment_node()
{
	short result;
	InvokeHelper(0x60040020, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

short CSVGDocument::GetNotation_node()
{
	short result;
	InvokeHelper(0x60040021, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

CDOMDocumentType CSVGDocument::getDoctype()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60040022, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMDocumentType(pDispatch);
}

CDOMImplementation CSVGDocument::getImplementation()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60040023, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMImplementation(pDispatch);
}

CDOMElement CSVGDocument::getDocumentElement()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60040024, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CDOMElement(pDispatch);
}

void CSVGDocument::setDocumentElement(LPDISPATCH DOMElement)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x60040025, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 DOMElement);
}

CDOMNode CSVGDocument::importNode(LPDISPATCH importedNode, BOOL deep)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_DISPATCH VTS_BOOL;
	InvokeHelper(0x60040026, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		importedNode, deep);
	return CDOMNode(pDispatch);
}

CDOMElement CSVGDocument::createElementNS(LPCTSTR namespaceURI, LPCTSTR qualifiedName)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x60040027, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		namespaceURI, qualifiedName);
	return CDOMElement(pDispatch);
}

CDOMAttribute CSVGDocument::createAttributeNS(LPCTSTR namespaceURI, LPCTSTR qualifiedName)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x60040028, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		namespaceURI, qualifiedName);
	return CDOMAttribute(pDispatch);
}

CDOMNodeList CSVGDocument::getElementsByTagNameNS(LPCTSTR namespaceURI, LPCTSTR localName)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x60040029, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		namespaceURI, localName);
	return CDOMNodeList(pDispatch);
}

CDOMElement CSVGDocument::getElementById(LPCTSTR elementId)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x6004002a, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		elementId);
	return CDOMElement(pDispatch);
}

CString CSVGDocument::GetTitle()
{
	CString result;
	InvokeHelper(0x96, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGDocument::SetTitle(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x96, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CSVGDocument::GetReferrer()
{
	CString result;
	InvokeHelper(0x97, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CSVGDocument::GetDomain()
{
	CString result;
	InvokeHelper(0x98, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CSVGDocument::GetUrl()
{
	CString result;
	InvokeHelper(0x99, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGDocument::suspend_redraw(long max_wait_milliseconds)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x9f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 max_wait_milliseconds);
}

void CSVGDocument::unsuspend_redraw(long suspend_handle_id)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xa0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 suspend_handle_id);
}

void CSVGDocument::unsuspend_redraw_all()
{
	InvokeHelper(0xa1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CString CSVGDocument::getTitle()
{
	CString result;
	InvokeHelper(0x60050008, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CSVGDocument::setTitle(LPCTSTR title)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x60050009, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 title);
}

CString CSVGDocument::getReferrer()
{
	CString result;
	InvokeHelper(0x6005000a, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CSVGDocument::getDomain()
{
	CString result;
	InvokeHelper(0x6005000b, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CSVGDocument::getURL()
{
	CString result;
	InvokeHelper(0x6005000c, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}
