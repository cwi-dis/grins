#if !defined(AFX_SVGDOCUMENT_H__3DC718A8_D59F_4DF7_816D_B799DDEAE745__INCLUDED_)
#define AFX_SVGDOCUMENT_H__3DC718A8_D59F_4DF7_816D_B799DDEAE745__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CDOMNode;
class CDOMNodeList;
class CDOMNamedNodeMap;
class CDOMDocument;
class CDOMDocumentType;
class CDOMImplementation;
class CDOMElement;
class CDOMDocumentFragment;
class CDOMText;
class CDOMComment;
class CDOMCDATASection;
class CDOMProcessingInstruction;
class CDOMAttribute;
class CDOMEntityReference;

/////////////////////////////////////////////////////////////////////////////
// CSVGDocument wrapper class

class CSVGDocument : public COleDispatchDriver
{
public:
	CSVGDocument() {}		// Calls COleDispatchDriver default constructor
	CSVGDocument(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CSVGDocument(const CSVGDocument& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	CString GetNodeName();
	VARIANT GetNodeValue();
	void SetNodeValue(const VARIANT& newValue);
	long GetNodeType();
	CDOMNode GetParentNode();
	CDOMNodeList GetChildNodes();
	CDOMNode GetFirstChild();
	CDOMNode GetLastChild();
	CDOMNode GetPreviousSibling();
	CDOMNode GetNextSibling();
	CDOMNamedNodeMap GetAttributes();
	CDOMNode insertBefore(LPDISPATCH newChild, const VARIANT& refChild);
	CDOMNode replaceChild(LPDISPATCH newChild, LPDISPATCH oldChild);
	CDOMNode removeChild(LPDISPATCH childNode);
	CDOMNode appendChild(LPDISPATCH newChild);
	BOOL hasChildNodes();
	CDOMDocument GetOwnerDocument();
	CDOMNode cloneNode(BOOL deep);
	CDOMDocumentType GetDoctype();
	CDOMImplementation GetImplementation();
	CDOMElement GetDocumentElement();
	void SetRefDocumentElement(LPDISPATCH newValue);
	CDOMElement createElement(LPCTSTR tagName);
	CDOMDocumentFragment createDocumentFragment();
	CDOMText createTextNode(LPCTSTR data);
	CDOMComment createComment(LPCTSTR data);
	CDOMCDATASection createCDATASection(LPCTSTR data);
	CDOMProcessingInstruction createProcessingInstruction(LPCTSTR target, LPCTSTR data);
	CDOMAttribute createAttribute(LPCTSTR name);
	CDOMEntityReference createEntityReference(LPCTSTR name);
	CDOMNodeList getElementsByTagName(LPCTSTR tagName);
	CString getNodeName();
	VARIANT getNodeValue();
	void setNodeValue(const VARIANT& value);
	long getNodeType();
	CDOMNode getParentNode();
	CDOMNodeList getChildNodes();
	CDOMNode getFirstChild();
	CDOMNode getLastChild();
	CDOMNode getPreviousSibling();
	CDOMNode getNextSibling();
	CDOMNamedNodeMap getAttributes();
	CDOMDocument getOwnerDocument();
	void normalize();
	BOOL supports(LPCTSTR featureStr, LPCTSTR versionStr);
	CString GetNamespaceURI();
	CString getNamespaceURI();
	CString GetPrefix();
	void SetPrefix(LPCTSTR lpszNewValue);
	CString getPrefix();
	void setPrefix(LPCTSTR prefix);
	CString GetLocalName();
	CString getLocalName();
	short GetElement_node();
	short GetAttribute_node();
	short GetText_node();
	short GetCdata_section_node();
	short GetEntity_reference_node();
	short GetEntity_node();
	short GetProcessing_instruction_node();
	short GetComment_node();
	short GetDocument_node();
	short GetDocument_type_node();
	short GetDocument_fragment_node();
	short GetNotation_node();
	CDOMDocumentType getDoctype();
	CDOMImplementation getImplementation();
	CDOMElement getDocumentElement();
	void setDocumentElement(LPDISPATCH DOMElement);
	CDOMNode importNode(LPDISPATCH importedNode, BOOL deep);
	CDOMElement createElementNS(LPCTSTR namespaceURI, LPCTSTR qualifiedName);
	CDOMAttribute createAttributeNS(LPCTSTR namespaceURI, LPCTSTR qualifiedName);
	CDOMNodeList getElementsByTagNameNS(LPCTSTR namespaceURI, LPCTSTR localName);
	CDOMElement getElementById(LPCTSTR elementId);
	CString GetTitle();
	void SetTitle(LPCTSTR lpszNewValue);
	CString GetReferrer();
	CString GetDomain();
	CString GetUrl();
	void suspend_redraw(long max_wait_milliseconds);
	void unsuspend_redraw(long suspend_handle_id);
	void unsuspend_redraw_all();
	CString getTitle();
	void setTitle(LPCTSTR title);
	CString getReferrer();
	CString getDomain();
	CString getURL();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_SVGDOCUMENT_H__3DC718A8_D59F_4DF7_816D_B799DDEAE745__INCLUDED_)
