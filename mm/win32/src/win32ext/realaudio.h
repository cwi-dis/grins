// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CRealAudio wrapper class
#ifndef INC_REALAUDIO
#define INC_REALAUDIO

class CRealAudio : public CWnd
{
protected:
	DECLARE_DYNCREATE(CRealAudio)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xcfcdaa03, 0x8be4, 0x11cf, { 0xb8, 0x4b, 0x0, 0x20, 0xaf, 0xbb, 0xcc, 0xfa } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	CString GetSource();
	void SetSource(LPCTSTR lpszNewValue);
	CString GetConsole();
	void SetConsole(LPCTSTR lpszNewValue);
	CString GetControls();
	void SetControls(LPCTSTR lpszNewValue);
	BOOL GetNoLabels();
	void SetNoLabels(BOOL bNewValue);
	BOOL GetAutoStart();
	void SetAutoStart(BOOL bNewValue);
	BOOL GetAutoGotoURL();
	void SetAutoGotoURL(BOOL bNewValue);
	CString GetWindowName();
	void SetWindowName(LPCTSTR lpszNewValue);
	//
	// Note: additional method 'GetSource' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'SetSource' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'GetConsole' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'SetConsole' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'GetControls' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'SetControls' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'GetNoLabels' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'SetNoLabels' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'GetAutoStart' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'SetAutoStart' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'GetAutoGotoURL' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	//
	// Note: additional method 'SetAutoGotoURL' not emitted because its C++ signature is the
	// same as another implementation already present - probably both
	// propput and propputref methods on the same property, both with VARIANT
	// type arguments.
	//
	short GetVolume();
	void SetVolume(short nVol);
	BOOL GetMute();
	void SetMute(BOOL bMute);
	BOOL GetLoop();
	void SetLoop(BOOL bVal);
	BOOL GetImageStatus();
	void SetImageStatus(BOOL bEnable);
	long GetPacketsTotal();
	long GetPacketsReceived();
	long GetPacketsOutOfOrder();
	long GetPacketsMissing();
	long GetPacketsEarly();
	long GetPacketsLate();
	long GetBandwidthAverage();
	long GetBandwidthCurrent();
	void DoPlayPause();
	void DoStop();
	void DoNextItem();
	void DoPrevItem();
	BOOL CanPlayPause();
	BOOL CanStop();
	BOOL HasNextItem();
	BOOL HasPrevItem();
	BOOL HasNextEntry();
	BOOL HasPrevEntry();
	void DoNextEntry();
	void DoPrevEntry();
	void AboutBox();
	void EditPreferences();
	void HideShowStatistics();
	BOOL IsStatisticsVisible();
	void DoGotoURL(LPCTSTR url, LPCTSTR target);
	void DoPlay();
	void DoPause();
	long GetPosition();
	long GetPlayState();
	long GetLength();
	CString GetTitle();
	CString GetAuthor();
	CString GetCopyright();
	long GetClipWidth();
	long GetClipHeight();
	BOOL CanPlay();
	BOOL CanPause();
	void SetPosition(long lPosition);
	long GetNumLoop();
	void SetNumLoop(long lVal);
	BOOL GetCenter();
	void SetCenter(BOOL bVal);
	BOOL GetNoLogo();
	void SetNoLogo(BOOL bVal);
	BOOL GetMaintainAspect();
	void SetMaintainAspect(BOOL bVal);
	CString GetBackgroundColor();
	void SetBackgroundColor(LPCTSTR pVal);
	BOOL GetStereoState();
	BOOL GetLiveState();
	BOOL GetShowStatistics();
	void SetShowStatistics(BOOL bVal);
	BOOL GetShowPreferences();
	void SetShowPreferences(BOOL bVal);
	BOOL GetShowAbout();
	void SetShowAbout(BOOL bVal);
	BOOL GetOriginalSize();
	void SetOriginalSize();
	BOOL GetDoubleSize();
	void SetDoubleSize();
	BOOL GetFullScreen();
	void SetFullScreen();
	BOOL GetEnableContextMenu();
	void SetEnableContextMenu(BOOL bVal);
	BOOL GetEnableOriginalSize();
	void SetEnableOriginalSize(BOOL bVal);
	BOOL GetEnableDoubleSize();
	void SetEnableDoubleSize(BOOL bVal);
	BOOL GetEnableFullScreen();
	void SetEnableFullScreen(BOOL bVal);
	BOOL GetEnableMessageBox();
	void SetEnableMessageBox(BOOL bVal);
	void SetTitle(LPCTSTR pVal);
	void SetAuthor(LPCTSTR pVal);
	void SetCopyright(LPCTSTR pVal);
	BOOL GetWantKeyboardEvents();
	void SetWantKeyboardEvents(BOOL bWantsEvents);
	BOOL GetWantMouseEvents();
	void SetWantMouseEvents(BOOL bWantsEvents);
	short GetNumEntries();
	short GetCurrentEntry();
	CString GetEntryTitle(short uEntryIndex);
	CString GetEntryAuthor(short uEntryIndex);
	CString GetEntryCopyright(short uEntryIndex);
	CString GetEntryAbstract(short uEntryIndex);
	void SetCanSeek(BOOL bCanSeek);
	BOOL GetCanSeek();
	long GetBufferingTimeElapsed();
	long GetBufferingTimeRemaining();
	long GetConnectionBandwidth();
	CString GetPreferedLanguageString();
	long GetPreferedLanguageID();
	long GetUserCountryID();
	short GetNumSources();
	CString GetSourceTransport(short nSourceNum);
	BOOL GetWantErrors();
	void SetWantErrors(BOOL bVal);
	BOOL GetShuffle();
	void SetShuffle(BOOL bVal);
	CString GetVersionInfo();
	CString GetLastMessage();
	long GetLastErrorSeverity();
	long GetLastErrorRMACode();
	long GetLastErrorUserCode();
	CString GetLastErrorUserString();
	CString GetLastErrorMoreInfoURL();
	void SetPreFetch(BOOL bVal);
	BOOL GetPreFetch();
	void SetRegion(LPCTSTR pVal);
	CString GetRegion();
	BOOL GetIsPlus();
};

#endif
