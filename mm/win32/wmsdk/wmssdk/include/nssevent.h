/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 3.01.75 */
/* at Fri Dec 03 17:05:15 1999
 */
/* Compiler settings for .\nssevent.idl:
    Os (OptLev=s), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: none
*/
//@@MIDL_FILE_HEADING(  )
#include "rpc.h"
#include "rpcndr.h"
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __nssevent_h__
#define __nssevent_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

#ifndef __INSSEventNotification_FWD_DEFINED__
#define __INSSEventNotification_FWD_DEFINED__
typedef interface INSSEventNotification INSSEventNotification;
#endif 	/* __INSSEventNotification_FWD_DEFINED__ */


#ifndef __INSSEventAuthorizationCallback_FWD_DEFINED__
#define __INSSEventAuthorizationCallback_FWD_DEFINED__
typedef interface INSSEventAuthorizationCallback INSSEventAuthorizationCallback;
#endif 	/* __INSSEventAuthorizationCallback_FWD_DEFINED__ */


#ifndef __INSSEventAuthorization_FWD_DEFINED__
#define __INSSEventAuthorization_FWD_DEFINED__
typedef interface INSSEventAuthorization INSSEventAuthorization;
#endif 	/* __INSSEventAuthorization_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"
#include "nsscore.h"

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

/****************************************
 * Generated header for interface: __MIDL_itf_nssevent_0000
 * at Fri Dec 03 17:05:15 1999
 * using MIDL 3.01.75
 ****************************************/
/* [local] */ 


//+-------------------------------------------------------------------------
//
//  Microsoft NetShow
//  Copyright (C) Microsoft Corporation 1998.
//
//  Automatically generated by Midl from nssevent.idl
//
//  DO NOT EDIT THIS FILE.
//
//--------------------------------------------------------------------------
#define NSS_EVENT_VERSION 1
typedef 
enum NSS_EVENT_TYPE
    {	NSSE_UNKNOWN_EVENT	= 0,
	NSSE_SKIP_AUTHENTICATION	= NSSE_UNKNOWN_EVENT + 1,
	NSSE_CONNECT	= NSSE_SKIP_AUTHENTICATION + 1,
	NSSE_DISCONNECT	= NSSE_CONNECT + 1,
	NSSE_OPEN	= NSSE_DISCONNECT + 1,
	NSSE_CLOSE	= NSSE_OPEN + 1,
	NSSE_PLAY	= NSSE_CLOSE + 1,
	NSSE_STOP	= NSSE_PLAY + 1
    }	NSS_EVENT_TYPE;

typedef struct  NSS_EVENT
    {
    DWORD Version;
    NSS_EVENT_TYPE Type;
    HRESULT hr;
    }	NSS_EVENT;



extern RPC_IF_HANDLE __MIDL_itf_nssevent_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_nssevent_0000_v0_0_s_ifspec;

#ifndef __INSSEventNotification_INTERFACE_DEFINED__
#define __INSSEventNotification_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: INSSEventNotification
 * at Fri Dec 03 17:05:15 1999
 * using MIDL 3.01.75
 ****************************************/
/* [unique][version][helpstring][uuid][object] */ 



EXTERN_C const IID IID_INSSEventNotification;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("44f7d3e6-200c-11d1-8c94-00a0c903a1a2")
    INSSEventNotification : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ INSSServerContext __RPC_FAR *pServer,
            /* [out] */ DWORD __RPC_FAR *pdwMsHeartbeatPeriod) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHandledEvents( 
            /* [in] */ DWORD cMaxHandledEvents,
            /* [out] */ DWORD __RPC_FAR *pcHandledEvents,
            /* [length_is][size_is][out] */ NSS_EVENT_TYPE __RPC_FAR *rgHandledEvents) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Shutdown( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnHeartBeat( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnEvent( 
            /* [in] */ NSS_EVENT __RPC_FAR *pEvent,
            /* [in] */ INSSUserContext __RPC_FAR *pUser,
            /* [in] */ INSSPresentationContext __RPC_FAR *pPresentation,
            /* [in] */ INSSCommandContext __RPC_FAR *pCommand) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INSSEventNotificationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INSSEventNotification __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INSSEventNotification __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INSSEventNotification __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Initialize )( 
            INSSEventNotification __RPC_FAR * This,
            /* [in] */ INSSServerContext __RPC_FAR *pServer,
            /* [out] */ DWORD __RPC_FAR *pdwMsHeartbeatPeriod);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHandledEvents )( 
            INSSEventNotification __RPC_FAR * This,
            /* [in] */ DWORD cMaxHandledEvents,
            /* [out] */ DWORD __RPC_FAR *pcHandledEvents,
            /* [length_is][size_is][out] */ NSS_EVENT_TYPE __RPC_FAR *rgHandledEvents);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Shutdown )( 
            INSSEventNotification __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnHeartBeat )( 
            INSSEventNotification __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnEvent )( 
            INSSEventNotification __RPC_FAR * This,
            /* [in] */ NSS_EVENT __RPC_FAR *pEvent,
            /* [in] */ INSSUserContext __RPC_FAR *pUser,
            /* [in] */ INSSPresentationContext __RPC_FAR *pPresentation,
            /* [in] */ INSSCommandContext __RPC_FAR *pCommand);
        
        END_INTERFACE
    } INSSEventNotificationVtbl;

    interface INSSEventNotification
    {
        CONST_VTBL struct INSSEventNotificationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INSSEventNotification_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INSSEventNotification_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INSSEventNotification_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INSSEventNotification_Initialize(This,pServer,pdwMsHeartbeatPeriod)	\
    (This)->lpVtbl -> Initialize(This,pServer,pdwMsHeartbeatPeriod)

#define INSSEventNotification_GetHandledEvents(This,cMaxHandledEvents,pcHandledEvents,rgHandledEvents)	\
    (This)->lpVtbl -> GetHandledEvents(This,cMaxHandledEvents,pcHandledEvents,rgHandledEvents)

#define INSSEventNotification_Shutdown(This)	\
    (This)->lpVtbl -> Shutdown(This)

#define INSSEventNotification_OnHeartBeat(This)	\
    (This)->lpVtbl -> OnHeartBeat(This)

#define INSSEventNotification_OnEvent(This,pEvent,pUser,pPresentation,pCommand)	\
    (This)->lpVtbl -> OnEvent(This,pEvent,pUser,pPresentation,pCommand)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INSSEventNotification_Initialize_Proxy( 
    INSSEventNotification __RPC_FAR * This,
    /* [in] */ INSSServerContext __RPC_FAR *pServer,
    /* [out] */ DWORD __RPC_FAR *pdwMsHeartbeatPeriod);


void __RPC_STUB INSSEventNotification_Initialize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INSSEventNotification_GetHandledEvents_Proxy( 
    INSSEventNotification __RPC_FAR * This,
    /* [in] */ DWORD cMaxHandledEvents,
    /* [out] */ DWORD __RPC_FAR *pcHandledEvents,
    /* [length_is][size_is][out] */ NSS_EVENT_TYPE __RPC_FAR *rgHandledEvents);


void __RPC_STUB INSSEventNotification_GetHandledEvents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INSSEventNotification_Shutdown_Proxy( 
    INSSEventNotification __RPC_FAR * This);


void __RPC_STUB INSSEventNotification_Shutdown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INSSEventNotification_OnHeartBeat_Proxy( 
    INSSEventNotification __RPC_FAR * This);


void __RPC_STUB INSSEventNotification_OnHeartBeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INSSEventNotification_OnEvent_Proxy( 
    INSSEventNotification __RPC_FAR * This,
    /* [in] */ NSS_EVENT __RPC_FAR *pEvent,
    /* [in] */ INSSUserContext __RPC_FAR *pUser,
    /* [in] */ INSSPresentationContext __RPC_FAR *pPresentation,
    /* [in] */ INSSCommandContext __RPC_FAR *pCommand);


void __RPC_STUB INSSEventNotification_OnEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INSSEventNotification_INTERFACE_DEFINED__ */


#ifndef __INSSEventAuthorizationCallback_INTERFACE_DEFINED__
#define __INSSEventAuthorizationCallback_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: INSSEventAuthorizationCallback
 * at Fri Dec 03 17:05:15 1999
 * using MIDL 3.01.75
 ****************************************/
/* [unique][version][helpstring][uuid][object] */ 



EXTERN_C const IID IID_INSSEventAuthorizationCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("44f7d3e7-200c-11d1-8c94-00a0c903a1a2")
    INSSEventAuthorizationCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnEventAuthorized( 
            /* [in] */ HRESULT hr,
            /* [in] */ DWORD dwRequestId) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INSSEventAuthorizationCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INSSEventAuthorizationCallback __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INSSEventAuthorizationCallback __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INSSEventAuthorizationCallback __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *OnEventAuthorized )( 
            INSSEventAuthorizationCallback __RPC_FAR * This,
            /* [in] */ HRESULT hr,
            /* [in] */ DWORD dwRequestId);
        
        END_INTERFACE
    } INSSEventAuthorizationCallbackVtbl;

    interface INSSEventAuthorizationCallback
    {
        CONST_VTBL struct INSSEventAuthorizationCallbackVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INSSEventAuthorizationCallback_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INSSEventAuthorizationCallback_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INSSEventAuthorizationCallback_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INSSEventAuthorizationCallback_OnEventAuthorized(This,hr,dwRequestId)	\
    (This)->lpVtbl -> OnEventAuthorized(This,hr,dwRequestId)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INSSEventAuthorizationCallback_OnEventAuthorized_Proxy( 
    INSSEventAuthorizationCallback __RPC_FAR * This,
    /* [in] */ HRESULT hr,
    /* [in] */ DWORD dwRequestId);


void __RPC_STUB INSSEventAuthorizationCallback_OnEventAuthorized_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INSSEventAuthorizationCallback_INTERFACE_DEFINED__ */


#ifndef __INSSEventAuthorization_INTERFACE_DEFINED__
#define __INSSEventAuthorization_INTERFACE_DEFINED__

/****************************************
 * Generated header for interface: INSSEventAuthorization
 * at Fri Dec 03 17:05:15 1999
 * using MIDL 3.01.75
 ****************************************/
/* [unique][version][helpstring][uuid][object] */ 



EXTERN_C const IID IID_INSSEventAuthorization;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    interface DECLSPEC_UUID("44f7d3e8-200c-11d1-8c94-00a0c903a1a2")
    INSSEventAuthorization : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetAuthorizedEvents( 
            /* [in] */ DWORD cMaxAuthorizedEvents,
            /* [out] */ DWORD __RPC_FAR *pcAuthorizedEvents,
            /* [length_is][size_is][out] */ NSS_EVENT_TYPE __RPC_FAR *rgAuthorizedEvents) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AuthorizeEvent( 
            /* [in] */ NSS_EVENT __RPC_FAR *pEvent,
            /* [in] */ INSSUserContext __RPC_FAR *pUser,
            /* [in] */ INSSPresentationContext __RPC_FAR *pPresentation,
            /* [in] */ INSSCommandContext __RPC_FAR *pCommand,
            /* [in] */ INSSEventAuthorizationCallback __RPC_FAR *pCallback,
            /* [in] */ DWORD dwRequestId) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct INSSEventAuthorizationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )( 
            INSSEventAuthorization __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )( 
            INSSEventAuthorization __RPC_FAR * This);
        
        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )( 
            INSSEventAuthorization __RPC_FAR * This);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetAuthorizedEvents )( 
            INSSEventAuthorization __RPC_FAR * This,
            /* [in] */ DWORD cMaxAuthorizedEvents,
            /* [out] */ DWORD __RPC_FAR *pcAuthorizedEvents,
            /* [length_is][size_is][out] */ NSS_EVENT_TYPE __RPC_FAR *rgAuthorizedEvents);
        
        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *AuthorizeEvent )( 
            INSSEventAuthorization __RPC_FAR * This,
            /* [in] */ NSS_EVENT __RPC_FAR *pEvent,
            /* [in] */ INSSUserContext __RPC_FAR *pUser,
            /* [in] */ INSSPresentationContext __RPC_FAR *pPresentation,
            /* [in] */ INSSCommandContext __RPC_FAR *pCommand,
            /* [in] */ INSSEventAuthorizationCallback __RPC_FAR *pCallback,
            /* [in] */ DWORD dwRequestId);
        
        END_INTERFACE
    } INSSEventAuthorizationVtbl;

    interface INSSEventAuthorization
    {
        CONST_VTBL struct INSSEventAuthorizationVtbl __RPC_FAR *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INSSEventAuthorization_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define INSSEventAuthorization_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define INSSEventAuthorization_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define INSSEventAuthorization_GetAuthorizedEvents(This,cMaxAuthorizedEvents,pcAuthorizedEvents,rgAuthorizedEvents)	\
    (This)->lpVtbl -> GetAuthorizedEvents(This,cMaxAuthorizedEvents,pcAuthorizedEvents,rgAuthorizedEvents)

#define INSSEventAuthorization_AuthorizeEvent(This,pEvent,pUser,pPresentation,pCommand,pCallback,dwRequestId)	\
    (This)->lpVtbl -> AuthorizeEvent(This,pEvent,pUser,pPresentation,pCommand,pCallback,dwRequestId)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE INSSEventAuthorization_GetAuthorizedEvents_Proxy( 
    INSSEventAuthorization __RPC_FAR * This,
    /* [in] */ DWORD cMaxAuthorizedEvents,
    /* [out] */ DWORD __RPC_FAR *pcAuthorizedEvents,
    /* [length_is][size_is][out] */ NSS_EVENT_TYPE __RPC_FAR *rgAuthorizedEvents);


void __RPC_STUB INSSEventAuthorization_GetAuthorizedEvents_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE INSSEventAuthorization_AuthorizeEvent_Proxy( 
    INSSEventAuthorization __RPC_FAR * This,
    /* [in] */ NSS_EVENT __RPC_FAR *pEvent,
    /* [in] */ INSSUserContext __RPC_FAR *pUser,
    /* [in] */ INSSPresentationContext __RPC_FAR *pPresentation,
    /* [in] */ INSSCommandContext __RPC_FAR *pCommand,
    /* [in] */ INSSEventAuthorizationCallback __RPC_FAR *pCallback,
    /* [in] */ DWORD dwRequestId);


void __RPC_STUB INSSEventAuthorization_AuthorizeEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __INSSEventAuthorization_INTERFACE_DEFINED__ */


/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
