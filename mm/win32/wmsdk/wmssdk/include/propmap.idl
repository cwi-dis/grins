//+-------------------------------------------------------------------------
//
//  Copyright (C) Microsoft Corporation, 1998 - 1998
//
//  File:       propmap.idl
//
//  Contents:   Property Map Interface definition
//				used by the Authorization and Authentication Interfaces
//
//--------------------------------------------------------------------------

cpp_quote("//+-------------------------------------------------------------------------")
cpp_quote("//")
cpp_quote("//  Microsoft NetShow")
cpp_quote("//  Copyright (C) Microsoft Corporation 1998.")
cpp_quote("//")
cpp_quote("//  Automatically generated by Midl from propmap.idl")
cpp_quote("//")
cpp_quote("//  DO NOT EDIT THIS FILE.")
cpp_quote("//")
cpp_quote("//--------------------------------------------------------------------------")

import "oaidl.idl";
import "ocidl.idl";



cpp_quote("#ifndef _LPENUMPROPERTYMAP_DEFINED")
cpp_quote("#define _LPENUMPROPERTYMAP_DEFINED")




/////////////////////////////////////////////////////////////////////////////
// IEnumPropertyMap
[
    local,
    object,
    uuid(c733e4a1-576e-11d0-b28c-00c04fd7cd22),
    pointer_default(unique)
]
interface IEnumPropertyMap : IUnknown
{
    typedef [unique] IEnumPropertyMap *LPENUMPROPERTYMAP;

    typedef struct _tagSTATPROPMAP
    {
        // extent this to use a variant
        LPOLESTR        pstrName;       // name
        DWORD           dwFlags;        // null for now
        VARIANT         variantValue;   // the variant value

    } STATPROPMAP, *LPSTATPROPMAP;


    [local]
    HRESULT Next(
        [in] ULONG celt,
        [out, size_is(celt), length_is(*pceltFetched)]
        STATPROPMAP *rgelt,
        [out] ULONG *pceltFetched);

    [call_as(Next)]
    HRESULT RemoteNext(
        [in] ULONG celt,
        [out, size_is(celt), length_is(*pceltFetched)]
        STATPROPMAP *rgelt,
        [out] ULONG *pceltFetched);

    HRESULT Skip(
        [in] ULONG celt);

    HRESULT Reset();

    HRESULT Clone(
        [out] IEnumPropertyMap **ppenum);
}

cpp_quote("#endif")









cpp_quote("#ifndef _LPPROPERTYMAP")
cpp_quote("#define _LPPROPERTYMAP")
/////////////////////////////////////////////////////////////////////////////
[
    local,
    object,
    uuid(c733e4a2-576e-11d0-b28c-00c04fd7cd22),
    pointer_default(unique)
]

interface IPropertyMap : IUnknown
{
    typedef [unique] IPropertyMap *LPPROPERTYMAP;

    HRESULT Write(
        [in]    LPCWSTR         pstrName,         // name
        [in]    VARIANT         variantValue,     // the variant value
        [in]    DWORD           dwFlags           // null for now
        );

    HRESULT Read(
        [in]    LPCWSTR        pstrName,       // name
        [out]   VARIANT        *pVariantValue   // the variant value
        );

    HRESULT GetCount(
        [out]   ULONG          *pCount
        );

    HRESULT GetEnumMAP(
        [out]   LPENUMPROPERTYMAP    *ppEnumMap
        );

}
cpp_quote("#endif")


